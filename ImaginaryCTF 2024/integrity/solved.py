
# from Crypto.Util.number import *

# e1 = 65537
# n = 10564138776494961592014999649037456550575382342808603854749436027195501416732462075688995673939606183123561300630136824493064895936898026009104455605012656112227514866064565891419378050994219942479391748895230609700734689313646635542548646360048189895973084184133523557171393285803689091414097848899969143402526024074373298517865298596472709363144493360685098579242747286374667924925824418993057439374115204031395552316508548814416927671149296240291698782267318342722947218349127747750102113632548814928601458613079803549610741586798881477552743114563683288557678332273321812700473448697037721641398720563971130513427
# ct = 5685838967285159794461558605064371935808577614537313517284872621759307511347345423871842021807700909863051421914284950799996213898176050217224786145143140975344971261417973880450295037249939267766501584938352751867637557804915469126317036843468486184370942095487311164578774645833237405496719950503828620690989386907444502047313980230616203027489995981547158652987398852111476068995568458186611338656551345081778531948372680570310816660042320141526741353831184185543912246698661338162113076490444675190068440073174561918199812094602565237320537343578057719268260605714741395310334777911253328561527664394607785811735
# signature = 1275844821761484983821340844185575393419792337993640612766980471786977428905226540853335720384123385452029977656072418163973282187758615881752669563780394774633730989087558776171213164303749873793794423254467399925071664163215290516803252776553092090878851242467651143197066297392861056333834850421091466941338571527809879833005764896187139966615733057849199417410243212949781433565368562991243818187206912462908282367755241374542822443478131348101833178421826523712810049110209083887706516764828471192354631913614281317137232427617291828563280573927573115346417103439835614082100305586578385614623425362545483289428

# for i in range(40000):
#     if pow(signature,e1,n) == pow(ct,i,n):
#         e2 = i
#         print(e2)
#         break

# def egcd(a,b):
#     u, u1 = 1, 0
#     v, v1 = 0, 1
#     while b:
#         q = a // b
#         u, u1 = u1, u - q  *  u1
#         v, v1 = v1, v - q  *  v1
#         a, b = b, a - q  *  b
#     return u, v

# u, v = (egcd(e1, e2))

# c1_inv = inverse(ct, n)
# m= (pow(c1_inv,-u)  *  pow(signature,v))%n
# print(long_to_bytes(m))


from Crypto.Util.number import *
from binascii import crc_hqx

p = getPrime(1024)
q = getPrime(1024)

n = p*q
e = 65537
tot = (p-1)*(q-1)
d = pow(e, -1, tot)
print(f"{d = }")

flag = bytes_to_long(b"ictf{oops_i_leaked_some_info}")
ct = pow(flag, e, n)

#signature = pow(flag, d, n) # no, im not gonna do that
signature = pow(flag, crc_hqx(long_to_bytes(d), 42), n)
print(f"{crc_hqx(long_to_bytes(d), 42) = }")

print(f"{n = }")
print(f"{ct = }")
print(f"{signature = }")