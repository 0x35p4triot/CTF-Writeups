from Crypto.Util.number import *
from sympy.ntheory.residue_ntheory import discrete_log

f1 = 88952575866827947965983024351948428571644045481852955585307229868427303211803239917835211249629755846575548754617810635567272526061976590304647326424871380247801316189016325247
f = 67077340815509559968966395605991498895734870241569147039932716484176494534953008553337442440573747593113271897771706973941604973691227887232994456813209749283078720189994152242
p = 396430433566694153228963024068183195900644000015629930982017434859080008533624204265038366113052353086248115602503012179807206251960510130759852727353283868788493357310003786807
m = 13 * pow(37-13, -1, p) * (37*f1 - f) % p 
flag = discrete_log(p, m, 13)
print(long_to_bytes(flag))
# A = g^a mod p
# a = discrete_log(p, A, g) 